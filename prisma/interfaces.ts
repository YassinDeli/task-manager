// This file was auto-generated by prisma-generator-typescript-interfaces

export type Status = "TODO" | "IN_PROGRESS" | "DONE";

export type Priority = "LOW" | "MEDIUM" | "HIGH";

export type Project_status = "NOT_STARTED" | "PLANNED" | "IN_PROGRESS" | "COMPLETED" | "ON_HOLD" | "CANCELLED";

export interface User {
  id: string;
  firstName: string | null;
  lastName: string | null;
  dateOfBirth: Date | null;
  isActive: boolean | null;
  password: string | null;
  username: string | null;
  email: string | null;
  emailVerified: Date | null;
  image: string | null;
  roleId: number | null;
  refreshToken: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  employee?: Employee | null;
  tasks?: Task[];
  role?: Role | null;
  projects?: Project[];
}

export interface Role {
  id: number;
  label: string;
  description: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  permissions?: RolePermission[];
  users?: User[];
}

export interface Permission {
  id: number;
  label: string;
  description: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  roles?: RolePermission[];
}

export interface RolePermission {
  id: number;
  roleId: number;
  permissionId: number;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  permission?: Permission;
  role?: Role;
}

export interface Entreprise {
  id: number;
  name: string;
  addressId: number | null;
  phone: string | null;
  email: string;
  responsibleId: number | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  employments?: EmployeeEntreprise[];
  address?: Address | null;
  responsible?: Employee | null;
}

export interface EmployeeEntreprise {
  id: number;
  employeeId: number;
  entrepriseId: number;
  position: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  employee?: Employee;
  entreprise?: Entreprise;
}

export interface Task {
  id: number;
  title: string;
  description: string | null;
  status: Status;
  priority: Priority;
  dueDate: Date | null;
  employeeId: number | null;
  projectId: number | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  userId: string | null;
  employee?: Employee | null;
  project?: Project | null;
  user?: User | null;
}

export interface Country {
  id: number;
  alpha2code: string | null;
  alpha3code: string | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  deletedAt: Date | null;
  isDeletionRestricted: boolean;
  addresses?: Address[];
}

export interface Address {
  id: number;
  address: string | null;
  address2: string | null;
  region: string | null;
  zipcode: string | null;
  countryId: number | null;
  createdAt: Date | null;
  updatedAt: Date | null;
  deletedAt: Date | null;
  isDeletionRestricted: boolean;
  country?: Country | null;
  Entreprise?: Entreprise[];
}

export interface Employee {
  id: number;
  phone: string | null;
  userId: string;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  user?: User;
  employments?: EmployeeEntreprise[];
  projects?: EmployeeProject[];
  responsibleFor?: Entreprise[];
  responsibleForProjects?: Project[];
  tasks?: Task[];
}

export interface Project {
  id: number;
  name: string;
  description: string | null;
  startDate: Date | null;
  endDate: Date | null;
  status: Project_status | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  addressId: number | null;
  priority: Priority;
  responsibleId: number | null;
  userId: string | null;
  employees?: EmployeeProject[];
  responsible?: Employee | null;
  tasks?: Task[];
  user?: User | null;
}

export interface EmployeeProject {
  id: number;
  employeeId: number;
  projectId: number;
  role: string | null;
  createdAt: Date;
  updatedAt: Date;
  deletedAt: Date | null;
  employee?: Employee;
  project?: Project;
}
